(()=>{var e={};e.id=838,e.ids=[838],e.modules={145:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5613:e=>{"use strict";e.exports=import("@google/genai")},6249:(e,t)=>{"use strict";Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,s){return s in t?t[s]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,s)):"function"==typeof t&&"default"===s?t:void 0}}})},8079:(e,t,s)=>{"use strict";s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{config:()=>l,default:()=>p,routeModule:()=>u});var i=s(1802),n=s(7153),o=s(6249),a=s(86),c=e([a]);a=(c.then?(await c)():c)[0];let p=(0,o.l)(a,"default"),l=(0,o.l)(a,"config"),u=new i.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/evaluate",pathname:"/api/evaluate",bundlePath:"",filename:""},userland:a});r()}catch(e){r(e)}})},86:(e,t,s)=>{"use strict";s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{default:()=>a});var i=s(5613),n=s(3572),o=e([i]);i=(o.then?(await o)():o)[0];let c=process.env.GEMINI_API_KEY;c||console.error("GEMINI_API_KEY environment variable is not set.");let p=c?new i.GoogleGenAI({apiKey:c}):null,l={type:i.Type.OBJECT,properties:{totalScore:{type:i.Type.INTEGER,description:"6軸評価の合計点（60点満点）。"},weaknessScores:{type:i.Type.OBJECT,description:"各スキル軸のスコア（10点満点）。キーは英語名。",properties:{conciseness:{type:i.Type.INTEGER,description:"簡潔性のスコア (1-10点)"},accuracy:{type:i.Type.INTEGER,description:"正確性のスコア (1-10点)"},clarity:{type:i.Type.INTEGER,description:"明瞭性のスコア (1-10点)"},structure:{type:i.Type.INTEGER,description:"構成力のスコア (1-10点)"},terminology:{type:i.Type.INTEGER,description:"用語の適切さのスコア (1-10点)"},clinicalSensitivity:{type:i.Type.INTEGER,description:"臨床的配慮度のスコア (1-10点)"}},required:["conciseness","accuracy","clarity","structure","terminology","clinicalSensitivity"]},strengths:{type:i.Type.ARRAY,description:"評価で特に良かった点のリスト",items:{type:i.Type.STRING}},improvementSuggestions:{type:i.Type.ARRAY,description:"改善点のリスト",items:{type:i.Type.STRING}},gutReaction:{type:i.Type.STRING,description:"専門医の第一印象"},misinterpretationRisk:{type:i.Type.STRING,description:"誤解リスク分析"},impliedCompetence:{type:i.Type.STRING,description:"信頼度評価"},finalGoodChart:{type:i.Type.STRING,description:"模範カルテ（SOAP形式）"},snippetSuggestions:{type:i.Type.ARRAY,description:"修正を推奨する具体的スニペット",items:{type:i.Type.OBJECT,properties:{originalText:{type:i.Type.STRING},replacementText:{type:i.Type.STRING}},required:["originalText","replacementText"]}}},required:["totalScore","weaknessScores","strengths","improvementSuggestions","gutReaction","misinterpretationRisk","impliedCompetence","finalGoodChart","snippetSuggestions"]};async function a(e,t){if(t.setHeader("Access-Control-Allow-Origin","*"),t.setHeader("Access-Control-Allow-Methods","POST, OPTIONS"),t.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===e.method){t.status(200).end();return}if("POST"!==e.method){t.status(405).json({message:"Method Not Allowed"});return}if(!p){t.status(503).json({message:"AI Engine Not Initialized. Missing GEMINI_API_KEY."});return}let{user_id:s,caseId:r,fullText:i,evaluationMode:o,caseTitle:a,targetSkill:c,originalText:u}=e.body;if(!s||!r||!i||!o)return t.status(400).json({message:"Missing required fields: user_id, caseId, fullText, or evaluationMode."});try{let e=Object.entries({簡潔性:"conciseness",正確性:"accuracy",明瞭性:"clarity",構成力:"structure",用語の適切さ:"terminology",臨床的配慮度:"clinicalSensitivity"}).map(([e,t])=>`1. **${e}** (${t}): ${e}の基準に基づいた1-10点`).join("\n"),y=`
あなたは世界的に著名な臨床研修指導医です。
評価軸:
${e}
評価モード: ${o} - ${"clinical_sensitivity"===o?"特に「臨床的配慮度」と「誤解リスク」を重視。":"カルテの「正確性」と「構成力」を主軸に評価。"}
必ずJSONスキーマに従って出力してください。
        `,d=`
課題タイトル: ${a}
ターゲットスキル: ${c}
元のカルテ: ${u}
提出カルテ: ${i}
        `,m=await p.models.generateContent({model:"gemini-2.5-flash",contents:[{role:"user",parts:[{text:d}]}],config:{systemInstruction:{parts:[{text:y}]},responseMimeType:"application/json",responseSchema:l,temperature:.6}}),T=m.candidates?.[0]?.content?.parts?.[0]?.text;if(!T)return console.error("AI response was empty or malformed:",m),t.status(500).json({message:"AI did not return valid JSON."});let g=JSON.parse(T),S={total_score:g.totalScore||0,conciseness_score:g.weaknessScores?.conciseness||0,accuracy_score:g.weaknessScores?.accuracy||0,clarity_score:g.weaknessScores?.clarity||0,structure_score:g.weaknessScores?.structure||0,terminology_score:g.weaknessScores?.terminology||0,clinical_sensitivity_score:g.weaknessScores?.clinicalSensitivity||0};await (0,n.logEvaluation)(s,r,i,S,g),t.status(200).json(g)}catch(e){console.error("Gemini API or internal server error:",e),t.status(500).json({message:"Internal server error during evaluation."})}}r()}catch(e){r(e)}})},7153:(e,t)=>{"use strict";var s;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return s}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(s||(s={}))},1802:(e,t,s)=>{"use strict";e.exports=s(145)},3572:()=>{throw Error("Module parse failed: The keyword 'interface' is reserved (16:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n| \n| // データベースに記録するためのスコア構造\n> interface DBScores {\n|     total_score: number;\n|     conciseness_score: number;")}};var t=require("../../webpack-api-runtime.js");t.C(e);var s=t(t.s=8079);module.exports=s})();